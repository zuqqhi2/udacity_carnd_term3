version: 2
jobs:
    build:
        docker:
            # Original C++ Sandbox environment
            # github: https://github.com/zuqqhi2/docker-cpp-sandbox
            # dockerhub: https://hub.docker.com/repository/docker/zuqqhi2/cpp-sandbox
            - image: zuqqhi2/cpp-sandbox:latest
        steps:
            - checkout
            # Compile
            - run: mkdir build
            - run: cd build && cmake .. && make
            # Unit test
            - run: cd build && ctest
            # Codecov.io
            - run: cd build &&
                lcov -c -b . -d CMakeFiles/PathPlannerSpec.dir/src/ -o coverage_path_planner.info &&
                lcov --remove coverage_path_planner.info -o coverage_filtered_path_planner.info '*/src/Eigen-3.3/*' &&
                lcov -c -b . -d CMakeFiles/VehicleSpec.dir/src/ -o coverage_vehicle.info &&
                lcov --remove coverage_vehicle.info -o coverage_filtered_vehicle.info '*/src/Eigen-3.3/*' &&
                lcov -c -b . -d CMakeFiles/CostFunctionSpec.dir/src/ -o coverage_cost_function.info &&
                lcov --remove coverage_cost_function.info -o coverage_filtered_cost_function.info '*/src/Eigen-3.3/*' &&
                cat coverage_filtered_*.info >> coverage.info &&
                bash <(curl -s https://codecov.io/bash) -f coverage.info
            # SonarCloud
            # TODO: gcovr shows 0 percent coverage and we cannot provide coverage info to sonarqube.
            # After you fix the issue, please put the followings into after results.xml generation.
            #   mkdir coverages &&
            #   gcovr CMakeFiles/PathPlannerSpec.dir/src --xml --keep -o coverages/coverage.xml &&
            #   cp CMakeFiles/PathPlannerSpec.dir/src/*path_planner.cpp.gcov coverages &&
            - run: cd build &&
                build-wrapper-linux-x86-64 --out-dir bw-output make clean all &&
                mkdir test_execution_results &&
                ./PathPlannerSpec --reporter sonarqube -o test_execution_results/results.xml &&
                cd .. &&
                sonar-scanner -Dsonar.login=${SONAR_CLOUD_USER_TOKEN}
